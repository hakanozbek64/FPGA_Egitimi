
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE0_NANO(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,

	//////////// LED //////////
	output		     [7:0]		LED,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// SW //////////
	input 		     [3:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================

wire  reset_n,en,d,q1,q2;

assign reset_n = KEY[0]; // bas覺l覺 iken 0 , bas覺l覺 degil: 1
assign d = SW[0];
assign en = SW[1];

assign LED[0] = q1;
assign LED[1] = q2;

d_ff dff1(CLOCK_50,en,d,q1);

d_ff_full dff2(CLOCK_50,reset_n,en,d,q2);


endmodule


module d_ff(input clk,en,d,output reg q);

always @( posedge clk )
begin
	if(en)
	begin
		q <= d;
	end
end

endmodule


module d_ff_full(input clk,reset_n,en,d,output reg q);

always @ ( posedge clk or negedge reset_n )
begin
	// async reset 
	if (!reset_n)
	begin
		q <= 1'b0;
	end
	// If not resetting, update the register output on the clock's rising edge
	else
	begin
		if(en)
		begin
			q <= d;
		end
	end
end
endmodule



module d_latch(input en,d,output reg q);

always@(*)
begin
	if(en)
	begin
		q <= d;
	end
end

endmodule




